definitions:
  common.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  common.Result:
    properties:
      code:
        type: integer
      data: {}
      msg:
        type: string
    type: object
  common.TransferRequest:
    properties:
      amount:
        type: string
      passphrase:
        type: string
      toName:
        type: string
      username:
        type: string
    type: object
host: localhost:8888
info:
  contact:
    email: Miyohashikori457@gmail.com
    name: KoriSama
    url: https://kori-sama.github.io/
  description: This is a API docs for MyGO project.
  title: MyGO!!!!! API docs
  version: "0.1"
paths:
  /api/blockchain/createWallet/{passphrase}:
    post:
      description: create wallet in blockchain
      parameters:
      - description: passphrase
        in: path
        name: passphrase
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.Result'
      summary: create wallet
      tags:
      - blockchain
  /api/blockchain/getBalance:
    get:
      description: get balance amount from wallet
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.Result'
      summary: get balance
      tags:
      - blockchain
  /api/blockchain/transfer:
    post:
      consumes:
      - application/json
      description: transfer funds from one wallet to another
      parameters:
      - description: transfer request json
        in: body
        name: transfer
        required: true
        schema:
          $ref: '#/definitions/common.TransferRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.Result'
      summary: transfer funds
      tags:
      - blockchain
  /api/login:
    post:
      consumes:
      - application/json
      description: login
      parameters:
      - description: login request
        in: body
        name: loginRequest
        required: true
        schema:
          $ref: '#/definitions/common.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.Result'
      summary: login
      tags:
      - user
swagger: "2.0"
