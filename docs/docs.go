// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "KoriSama",
            "url": "https://kori-sama.github.io/",
            "email": "Miyohashikori457@gmail.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/blockchain/createWallet/{passphrase}": {
            "post": {
                "description": "create wallet in blockchain",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "blockchain"
                ],
                "summary": "create wallet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "passphrase",
                        "name": "passphrase",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.Result"
                        }
                    }
                }
            }
        },
        "/api/blockchain/getBalance": {
            "get": {
                "description": "get balance amount from wallet",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "blockchain"
                ],
                "summary": "get balance",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.Result"
                        }
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "description": "login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "login",
                "parameters": [
                    {
                        "description": "login request",
                        "name": "loginRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/common.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.Result"
                        }
                    }
                }
            }
        },
        "/api/register": {
            "post": {
                "description": "register",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "register",
                "parameters": [
                    {
                        "description": "register request",
                        "name": "registerRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/common.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.Result"
                        }
                    }
                }
            }
        },
        "/api/transaction": {
            "get": {
                "description": "get limited transactions, admins can see all transactions, users can only see passed transactions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transaction"
                ],
                "summary": "get limited transactions",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/common.TransactionResponse"
                            }
                        }
                    }
                }
            }
        },
        "/api/transaction/by": {
            "get": {
                "description": "get transactions by status, only admins have permission to access other statuses except passed",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transaction"
                ],
                "summary": "get transactions by status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "transaction status",
                        "name": "status",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/common.TransactionResponse"
                            }
                        }
                    }
                }
            }
        },
        "/api/transaction/censor": {
            "post": {
                "description": "Censor a transaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transaction"
                ],
                "summary": "Censor a transaction",
                "parameters": [
                    {
                        "description": "censor request",
                        "name": "censorRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/common.CensorRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.Result"
                        }
                    }
                }
            }
        },
        "/api/transaction/delete/{id}": {
            "post": {
                "description": "Delete a transaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transaction"
                ],
                "summary": "Delete a transaction",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Transaction ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.Result"
                        }
                    }
                }
            }
        },
        "/api/transaction/new": {
            "post": {
                "description": "Create a new transaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transaction"
                ],
                "summary": "Create a new transaction",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.Result"
                        }
                    }
                }
            }
        },
        "/api/transaction/publish": {
            "post": {
                "description": "Publish a transaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transaction"
                ],
                "summary": "Publish a transaction",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.Result"
                        }
                    }
                }
            }
        },
        "/api/transaction/save": {
            "post": {
                "description": "Save a transaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transaction"
                ],
                "summary": "Save a transaction",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.Result"
                        }
                    }
                }
            }
        },
        "/api/transaction/search": {
            "get": {
                "description": "search transaction by title or description",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transaction"
                ],
                "summary": "search transaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "search string",
                        "name": "search",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/common.TransactionResponse"
                            }
                        }
                    }
                }
            }
        },
        "/api/transaction/self": {
            "get": {
                "description": "get transactions of login user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transaction"
                ],
                "summary": "get self transactions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/common.TransactionResponse"
                            }
                        }
                    }
                }
            }
        },
        "/api/transaction/{id}": {
            "get": {
                "description": "get single transaction by id, only allowed for admins",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transaction"
                ],
                "summary": "get transaction",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Transaction ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.TransactionResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "common.CensorRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "is_passed": {
                    "type": "boolean"
                }
            }
        },
        "common.LoginRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "common.RegisterRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/common.Role"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "common.Result": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "msg": {
                    "type": "string"
                }
            }
        },
        "common.Role": {
            "type": "string",
            "enum": [
                "Old",
                "Volunteer",
                "Admin"
            ],
            "x-enum-varnames": [
                "RoleOld",
                "RoleVolunteer",
                "RoleAdmin"
            ]
        },
        "common.Status": {
            "type": "string",
            "enum": [
                "Draft",
                "Censoring",
                "Passed",
                "Rejected"
            ],
            "x-enum-varnames": [
                "StatusDraft",
                "StatusCensoring",
                "StatusPassed",
                "StatusRejected"
            ]
        },
        "common.TransactionResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "status": {
                    "$ref": "#/definitions/common.Status"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "integer"
                },
                "value": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.1",
	Host:             "localhost:8888",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "MyGO!!!!! API docs",
	Description:      "This is a API docs for MyGO project.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
